<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
<style>
  body{
    font-family: Helvetica;
  }
  svg{
    width: 500px;
    height: 500px;
  }
  .title{
    font-size: 26px;
    font-style: italic;
    color: #7D0552;
  }
  .top-label{
    font-size: 13px;
    font-style: italic;
    text-transform: uppercase;
    float: left;
    color: #7D0552;
  }
  .age-label{
    text-align: right;
    font-weight: bold;
    width: 90px;
    padding-right: 10px;
  }
  .clearfix{
    clear: both;
  }
  .bar{
    fill: #057D31;
  }
  .axis-label{
    text-anchor: middle;
    font-size: 13px;
  }
  .x.axis line{
    fill: none;
    stroke: #000;
  }
  .x.axis text{
    font-size: 13px;
  }
  .y.axis line{
    display: none;
  }
  .axis path{
    display: none;
  }
  .play-button{
    margin-left: 10px;
    margin-bottom: 15px;
    font-style: italic;
    text-transform: uppercase;
    cursor: pointer;
  }
  .buttons-container{
    width: 520px;
    margin-bottom: 10px;
  }
  .button{
    float: left;
    margin-left: 10px;
    font-weight: lighter;
    cursor: pointer;
  }
  .selected {
    font-weight: bold;
  }
</style>
</head>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>
<script>

var year = 2015;

var buttonYears = [1950, 1955, 1960, 1965, 1970, 1975, 1980, 1985, 1990, 1995,
  2000, 2005, 2010, 2015, 2020, 2025, 2030, 2035, 2040, 2045, 2050];

var margin = {top: 30, right: 0, bottom: 0, left: 100},
    width = 500 - margin.left - margin.right,
    height = 450 - margin.top - margin.bottom;

var body = d3.select("body");

var x = d3.scale.linear()
    .range([0,width])

var y = d3.scale.ordinal()
    .rangeBands([0, height], 0.2, 0);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("top")
    .ticks(5, "%")

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")

function keys(d) {
    return d.age;
}

body.append("h2")
    .attr("class", "title")
    .text("Age distribution of the world");

var playAll = body.append("div")
    .attr("class", "play-button")
    .text("Play all years");

var buttons = body.append("div")
    .attr("class", "buttons-container")
      .selectAll("div").data(buttonYears)
    .enter().append("div")
      .text(function(d) {return d})
      .attr("class", function(d) {
        if(d == year)
            return "button selected";
        else
            return "button";
      });

  body.append("div")
      .attr("class", "clearfix");

  body.append("div")
      .attr("class", "top-label age-label")
    .append("p")
      .text("age group");

  body.append("div")
      .attr("class", "top-label")
    .append("p")
      .text("portion of the population");

  body.append("div")
      .attr("class", "clearfix");

d3.csv("allData.csv", function(error, data){
  var popData = data.filter(function(element) {return element.year == year});
  x.domain([0, d3.max(data, function(element) {return element.value})]);
  y.domain(popData.map(function(element) {return element.age}));

  var svg = body.append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  var barGroup = svg.append("g")
      .attr("class", "bar");

  var bars = barGroup.selectAll("rect")
      .data(popData, keys)
    .enter().append("rect")
      .attr("x", 0)
      .attr("y", function(d) {return y(d.age)})
      .attr("width", function(d) {return x(d.value)})
      .attr("height", y.rangeBand());

  svg.append("g")
      .call(xAxis)
      .attr("class", "x axis")

  svg.append("g")
      .call(yAxis)
      .attr("class", "y axis")

  var playInterval;

  buttons.on("click", function(d){
      update(d);
      clearInterval(playInterval);
  });

  playAll.on("click", function() {
    var i = 0;
    playInterval = setInterval(function() {
      update(buttonYears[i]);
      i++;
      if(i > buttonYears.length - 1){
        clearInterval(playInterval);
      }

    }, 500);
  });

  function update(updateYear) {

    d3.select(".selected")
        .classed("selected", false)

    buttons
        .filter(function(d) { return d == updateYear; })
        .classed("selected", true)

    popData = data.filter(function(element) {return element.year == updateYear});

    bars.data(popData, keys)
      .transition()
      .duration(500)
      .attr("width", function(d) {return x(d.value)});
  };
});
</script>
</body>
</html>
